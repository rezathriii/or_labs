model "Graph Coloring"
uses "mmxprs", "mmsystem"

parameters
  N = 40       ! 20, 40, 60
  p = 0.1      ! 0.1, 0.3, 0.5
  SEED = 1234
end-parameters

declarations
  Nodes = 1..N
  Colors = 1..N
  Edge: array(Nodes, Nodes) of boolean
  x: array(Nodes, Colors) of mpvar
  y: array(Colors) of mpvar
  StartTime, EndTime: real
end-declarations

setrandseed(SEED)
StartTime := gettime

forall(i,j in Nodes | i < j) do
  if random <= p then
    Edge(i,j) := true
    Edge(j,i) := true
  end-if
end-do

ActualEdges := sum(i,j in Nodes | i < j and Edge(i,j)) 1

Minimize := sum(k in Colors) y(k)
forall(i in Nodes) sum(k in Colors) x(i,k) = 1
forall(i,j in Nodes | i < j and Edge(i,j)) do
  forall(k in Colors) x(i,k) + x(j,k) <= 1
end-do
forall(i in Nodes, k in Colors) x(i,k) <= y(k)
forall(k in Colors) y(k) is_binary
forall(i in Nodes, k in Colors) x(i,k) is_binary

minimize(Minimize)
EndTime := gettime

! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
! OUTPUT
! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
writeln("GC, N=", N, ", p=", p, ", Edges=", ActualEdges,
        ", Colors=", getobjval, ", Time=", EndTime-StartTime, "s")
end-model